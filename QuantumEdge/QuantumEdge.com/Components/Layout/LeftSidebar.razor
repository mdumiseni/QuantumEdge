@implements IDisposable
@inject NavigationManager NavigationManager

<div class="left-side-bar">
<div class="brand-logo">
    <a href="index.html">
        <img src="/vendors/images/deskapp-logo.svg" alt="" class="dark-logo" />
        <img src="/vendors/images/deskapp-logo-white.svg" alt="" class="light-logo"/>
    </a>
    <div class="close-sidebar" data-toggle="left-sidebar-close">
        <i class="ion-close-round"></i>
    </div>
</div>
<div class="menu-block customscroll">
<div class="sidebar-menu">
<ul id="accordion-menu">
    <li>
        <NavLink class="dropdown-toggle no-arrow" href="/" Match="NavLinkMatch.All">
            <span class="micon bi bi-house"></span><span class="mtext">Home</span>
        </NavLink>
    </li>

    <li>
        <NavLink class="dropdown-toggle no-arrow" href="/Alpaca/Overview">
            <span class="micon bi bi-house"></span><span class="mtext">Alpaca</span>
        </NavLink>
    </li>

    <li>
        <NavLink class="dropdown-toggle no-arrow" href="/EasyEquities/Overview">
            <span class="micon bi bi-house"></span><span class="mtext">Easy Equities</span>
        </NavLink>
    </li>
</ul>
</div>
</div>
</div>

@code {
    private string? currentUrl;
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}