@implements IDisposable
@inject NavigationManager NavigationManager

<div class="left-side-bar">
<div class="brand-logo">
    <a href="index.html">
        <img src="/vendors/images/deskapp-logo.svg" alt="" class="dark-logo" />
        <img src="/vendors/images/deskapp-logo-white.svg" alt="" class="light-logo"/>
    </a>
    <div class="close-sidebar" data-toggle="left-sidebar-close">
        <i class="ion-close-round"></i>
    </div>
</div>
<div class="menu-block customscroll">
<div class="sidebar-menu">
<ul id="accordion-menu">
    <li>
        <NavLink class="dropdown-toggle no-arrow" href="" Match="NavLinkMatch.All">
            <span class="micon bi bi-house"></span><span class="mtext">Home</span>
        </NavLink>
    </li>
<li class="dropdown">
    <a href="javascript:;" class="dropdown-toggle"><span class="micon bi bi-textarea-resize"></span><span class="mtext">Broker Accounts</span></a>
    <ul class="submenu">
        <li>
            <NavLink href="EasyEquities/Overview">Easy Equities</NavLink>
        </li>
        <li>
            <NavLink href="/Overview">Alpaca</NavLink>
        </li>
    </ul>
</li>
<li class="dropdown">
    <a href="javascript:;" class="dropdown-toggle"><span class="micon bi bi-table"></span><span class="mtext">Analytics</span></a>
    <ul class="submenu">
        <li><a href="basic-table.html">Basic Tables</a></li>
        <li><a href="datatable.html">DataTables</a></li>
    </ul>
</li>
<li>
    <a href="calendar.html" class="dropdown-toggle no-arrow"><span class="micon bi bi-calendar4-week"></span><span class="mtext">Calendar</span></a>
</li>
</ul>
</div>
</div>
</div>

@code {
    private string? currentUrl;
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}